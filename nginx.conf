worker_processes auto;

events {
  worker_connections 1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  server_tokens off;
  sendfile on;
  keepalive_timeout 65;
  client_max_body_size 32m;

  # Для корректной поддержки WebSocket/Upgrade
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  upstream backend {
    server 127.0.0.1:8000;
    keepalive 32;
  }

  # HTTP -> HTTPS, с исключением под ACME (на будущее, если решите использовать webroot)
  server {
    listen 80;
    listen [::]:80;
    server_name 176-108-244-31.sslip.io;

    # Безопасно оставить, даже если certbot работает в standalone-режиме
    location ^~ /.well-known/acme-challenge/ {
      root /var/www/_letsencrypt;
      default_type "text/plain";
      try_files $uri =404;
    }

    location / {
      return 301 https://$host$request_uri;
    }
  }

  # Основной HTTPS-сервер
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name 176-108-244-31.sslip.io;

    ssl_certificate     /etc/ssl/certs/fullchain.pem;
    ssl_certificate_key /etc/ssl/private/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_prefer_server_ciphers off;

    # Включайте после первичной проверки, чтобы не «запирать» себя на HTTPS при отладке
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Проксирование в FastAPI/Uvicorn
    location / {
      proxy_pass http://backend;
      proxy_http_version 1.1;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # WebSocket/Long-poll
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      proxy_read_timeout 300;
      proxy_send_timeout 300;
    }
  }
}
